<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo写作简单笔记</title>
    <url>/2023/03/20/Hexo%E5%86%99%E4%BD%9C%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Hexo写作简单笔记"><a href="#Hexo写作简单笔记" class="headerlink" title="Hexo写作简单笔记"></a>Hexo写作简单笔记</h1><h2 id="新建笔记"><a href="#新建笔记" class="headerlink" title="新建笔记"></a>新建笔记</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>
<p><code>layout</code> : 可选三种布局，分别是<code>post</code>、<code>page</code>、<code>draft</code>，默认是<code>post</code><br><code>title</code> : 即文章标题</p>
<h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>在使用<code>draft</code>布局写作之后，需要用<code>hexo publish</code>命令将草稿发布，相当于从<code>_draft</code>文件夹移动到<code>_post</code>文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>
<h2 id="将文章更新至博客网站中"><a href="#将文章更新至博客网站中" class="headerlink" title="将文章更新至博客网站中"></a>将文章更新至博客网站中</h2><h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g </span><br></pre></td></tr></table></figure>
<p>等同于<code>hexo generate</code></p>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>在本地运行博客用于测试</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><p>也可以将上面两条命令合并为一条命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>用户画像项目（一） 规则匹配类标签</title>
    <url>/2023/03/22/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%80%EF%BC%89-%E8%A7%84%E5%88%99%E5%8C%B9%E9%85%8D%E7%B1%BB%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="用户画像项目（一）-规则匹配类标签"><a href="#用户画像项目（一）-规则匹配类标签" class="headerlink" title="用户画像项目（一） 规则匹配类标签"></a>用户画像项目（一） 规则匹配类标签</h1><p>首先创建标签<br>按照如下形式创建</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">标签名称：职业</span><br><span class="line">标签分类：电商-某商城-人口属性</span><br><span class="line">更新周期：</span><br><span class="line">业务含义：注册用户的职业</span><br><span class="line">标签规则：</span><br><span class="line">inType=hbase</span><br><span class="line">zkHosts=bigdata-cdh01.itcast.cn</span><br><span class="line">zkPort=<span class="number">2181</span></span><br><span class="line">hbaseTable=tbl_tag_users</span><br><span class="line">family=detail</span><br><span class="line">selectFieldNames=id,job</span><br><span class="line">程序入口：</span><br><span class="line">cn.itcast.tags.models.rule.JobModel</span><br><span class="line">算法名称：</span><br><span class="line">MATCH</span><br><span class="line">算法引擎：</span><br><span class="line">tags-model_2<span class="number">.11</span>.jar</span><br><span class="line">模型参数：</span><br><span class="line">--driver-memory 512m --executor-memory 512m --num-executors <span class="number">1</span> --executor-cores <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>基本代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.tags.models.rule</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.tags.models.&#123;AbstractModel, ModelType&#125;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.tags.tools.TagTools</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.DataFrame</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JobTagModel</span> <span class="keyword">extends</span> <span class="title class_">AbstractModel</span>(<span class="string">&quot;职业标签&quot;</span>, ModelType.MATCH)&#123; <span class="comment">//修改class名和标签名</span></span><br><span class="line">    override def <span class="title function_">doTag</span><span class="params">(businessDF: DataFrame, tagDF: DataFrame)</span>: DataFrame = &#123;</span><br><span class="line">        businessDF.printSchema()</span><br><span class="line">        businessDF.show(<span class="number">10</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        tagDF.printSchema()</span><br><span class="line">        tagDF.show(<span class="number">10</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        val modelDF : DataFrame = TagTools.ruleMatchTag(</span><br><span class="line">            businessDF, field = <span class="string">&quot;job&quot;</span>, tagDF  <span class="comment">//修改field</span></span><br><span class="line">        )</span><br><span class="line">        modelDF</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">object JobTagModel &#123;  <span class="comment">//修改object名</span></span><br><span class="line">    def <span class="title function_">main</span><span class="params">(args: Array[String])</span>: Unit = &#123;</span><br><span class="line">        <span class="type">val</span> <span class="variable">tagModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobTagModel</span>()  <span class="comment">//</span></span><br><span class="line">        tagModel.executeModel(<span class="number">321L</span>) <span class="comment">//填入四级标签id</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>用户画像</category>
      </categories>
      <tags>
        <tag>用户画像</tag>
        <tag>大数据</tag>
        <tag>标签开发</tag>
      </tags>
  </entry>
</search>
