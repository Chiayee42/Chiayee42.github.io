<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo写作简单笔记</title>
    <url>/2023/03/20/Hexo%E5%86%99%E4%BD%9C%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Hexo写作简单笔记"><a href="#Hexo写作简单笔记" class="headerlink" title="Hexo写作简单笔记"></a>Hexo写作简单笔记</h1><h2 id="新建笔记"><a href="#新建笔记" class="headerlink" title="新建笔记"></a>新建笔记</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>
<p><code>layout</code> : 可选三种布局，分别是<code>post</code>、<code>page</code>、<code>draft</code>，默认是<code>post</code><br><code>title</code> : 即文章标题</p>
<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>在使用<code>draft</code>布局写作之后，需要用<code>hexo publish</code>命令将草稿发布，相当于从<code>_draft</code>文件夹移动到<code>_post</code>文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>
<h2 id="将文章更新至博客网站中"><a href="#将文章更新至博客网站中" class="headerlink" title="将文章更新至博客网站中"></a>将文章更新至博客网站中</h2><h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g </span><br></pre></td></tr></table></figure>
<p>等同于<code>hexo generate</code></p>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>在本地运行博客用于测试</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><p>也可以将上面两条命令合并为一条命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>用户画像项目（一） 规则匹配类标签</title>
    <url>/2023/03/22/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%80%EF%BC%89-%E8%A7%84%E5%88%99%E5%8C%B9%E9%85%8D%E7%B1%BB%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="用户画像项目（一）-规则匹配类标签"><a href="#用户画像项目（一）-规则匹配类标签" class="headerlink" title="用户画像项目（一） 规则匹配类标签"></a>用户画像项目（一） 规则匹配类标签</h1><h2 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h2><p>按照如下形式创建</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">标签名称：职业</span><br><span class="line">标签分类：电商-某商城-人口属性</span><br><span class="line">更新周期：</span><br><span class="line">业务含义：注册用户的职业</span><br><span class="line">标签规则：</span><br><span class="line">inType=hbase</span><br><span class="line">zkHosts=bigdata-cdh01.itcast.cn</span><br><span class="line">zkPort=<span class="number">2181</span></span><br><span class="line">hbaseTable=tbl_tag_users</span><br><span class="line">family=detail</span><br><span class="line">selectFieldNames=id,job</span><br><span class="line">程序入口：</span><br><span class="line">cn.itcast.tags.models.rule.JobModel</span><br><span class="line">算法名称：</span><br><span class="line">MATCH</span><br><span class="line">算法引擎：</span><br><span class="line">tags-model_2<span class="number">.11</span>.jar</span><br><span class="line">模型参数：</span><br><span class="line">--driver-memory 512m --executor-memory 512m --num-executors <span class="number">1</span> --executor-cores <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.tags.models.rule</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.tags.models.&#123;AbstractModel, ModelType&#125;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.tags.tools.TagTools</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.DataFrame</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JobTagModel</span> <span class="keyword">extends</span> <span class="title class_">AbstractModel</span>(<span class="string">&quot;职业标签&quot;</span>, ModelType.MATCH)&#123; <span class="comment">//修改class名和标签名</span></span><br><span class="line">    override def <span class="title function_">doTag</span><span class="params">(businessDF: DataFrame, tagDF: DataFrame)</span>: DataFrame = &#123;</span><br><span class="line">        businessDF.printSchema()</span><br><span class="line">        businessDF.show(<span class="number">10</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        tagDF.printSchema()</span><br><span class="line">        tagDF.show(<span class="number">10</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">        val modelDF : DataFrame = TagTools.ruleMatchTag(</span><br><span class="line">            businessDF, field = <span class="string">&quot;job&quot;</span>, tagDF  <span class="comment">//修改field</span></span><br><span class="line">        )</span><br><span class="line">        modelDF</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">object JobTagModel &#123;  <span class="comment">//修改object名</span></span><br><span class="line">    def <span class="title function_">main</span><span class="params">(args: Array[String])</span>: Unit = &#123;</span><br><span class="line">        <span class="type">val</span> <span class="variable">tagModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobTagModel</span>()  <span class="comment">//</span></span><br><span class="line">        tagModel.executeModel(<span class="number">321L</span>) <span class="comment">//填入四级标签id</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>用户画像</category>
      </categories>
      <tags>
        <tag>用户画像</tag>
        <tag>大数据</tag>
        <tag>标签开发</tag>
      </tags>
  </entry>
  <entry>
    <title>ffmpeg常用指令</title>
    <url>/2023/03/22/ffmpeg%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="ffmpeg常用指令"><a href="#ffmpeg常用指令" class="headerlink" title="ffmpeg常用指令"></a>ffmpeg常用指令</h1><h2 id="ffmpeg参数格式"><a href="#ffmpeg参数格式" class="headerlink" title="ffmpeg参数格式"></a>ffmpeg参数格式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg \</span><br><span class="line">[全局参数] \</span><br><span class="line">[输入文件参数] \</span><br><span class="line">-i [输入文件] \</span><br><span class="line">[输出文件参数] \</span><br><span class="line">[输出文件]</span><br></pre></td></tr></table></figure>
<h2 id="剪辑视频"><a href="#剪辑视频" class="headerlink" title="剪辑视频"></a>剪辑视频</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg \</span><br><span class="line">-ss 00:00:30.0 \</span><br><span class="line">-i input.mp4 \</span><br><span class="line">-c copy \</span><br><span class="line">-t 00:01:00.0 \</span><br><span class="line">output.mp4</span><br></pre></td></tr></table></figure>
<p>-i : 输入文件<br>-ss : 起始时间<br>-t : 指定时间长度，默认单位为秒<br>-to : 指定结束时间<br>-c:v : 视频编码  </p>
<blockquote>
<p><code>-c:v copy</code>保持原本编码不变<br><code>-c:v h264_nvenc</code>可以使用nvdia硬件编码</p>
</blockquote>
<h2 id="拼接音频"><a href="#拼接音频" class="headerlink" title="拼接音频"></a>拼接音频</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg \</span><br><span class="line">-f concat \</span><br><span class="line">-safe 0 \</span><br><span class="line">-i list.txt \</span><br><span class="line">-c copy \</span><br><span class="line">output.mp3 </span><br></pre></td></tr></table></figure>
<p>通过文件列表按顺序拼接，txt文件格式如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file &#x27;filename1&#x27;</span><br><span class="line">file &#x27;filename2&#x27;</span><br><span class="line">file &#x27;filename3&#x27;</span><br><span class="line">file &#x27;filename4&#x27;</span><br><span class="line">file &#x27;filename5&#x27;</span><br></pre></td></tr></table></figure>
<h2 id="视频转码"><a href="#视频转码" class="headerlink" title="视频转码"></a>视频转码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg \</span><br><span class="line">-i input.mp4 \</span><br><span class="line">-vf scale=1920:1080 \</span><br><span class="line">-c:v h264_nvenc \</span><br><span class="line">-b:v 5500k \</span><br><span class="line">-c:a aac \</span><br><span class="line">-b:a 128k \</span><br><span class="line">-output.mp4</span><br></pre></td></tr></table></figure>
<p>如果编码方式不支持硬件编码，则修改<code>-c:v</code>参数<br>-b:v : 视频码率，一般6000足够清晰<br>-c:a : 音频编码<br>-b:a : 音频码率  </p>
]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>剪辑</tag>
      </tags>
  </entry>
  <entry>
    <title>通过SSH远程端口转发，实现外网访问内网主机</title>
    <url>/2023/04/07/%E9%80%9A%E8%BF%87SSH%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA/</url>
    <content><![CDATA[<h1 id="通过SSH远程端口转发，实现外网访问内网主机"><a href="#通过SSH远程端口转发，实现外网访问内网主机" class="headerlink" title="通过SSH远程端口转发，实现外网访问内网主机"></a>通过SSH远程端口转发，实现外网访问内网主机</h1><h2 id="一、使用场景"><a href="#一、使用场景" class="headerlink" title="一、使用场景"></a>一、使用场景</h2><p>校园网可以连接到校外网络，而校外无法访问校园网内的主机。为了解决这个问题，本文介绍一个基于SSH远程端口转发的方法，通过一个有公网ip的服务器B，在服务器B和校内主机A之间建立一个隧道，从而实现校外访问</p>
<p>校内主机：A<br>服务器：B<br>校外电脑：C </p>
<h2 id="二、SSH命令"><a href="#二、SSH命令" class="headerlink" title="二、SSH命令"></a>二、SSH命令</h2><p>在校内主机上输入如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -NfR 8822:localhost:22 ubuntu@enter.B.ip.address</span><br></pre></td></tr></table></figure>
<p>其中<code>enter.B.ip.address</code>为服务器ip，这样就在服务器的8822端口和校内主机的22端口之间建立了隧道。然后就可以通过<code>ssh user@enter.B.ip.address</code>访问校内主机A了</p>
<h2 id="三、配置秘钥"><a href="#三、配置秘钥" class="headerlink" title="三、配置秘钥"></a>三、配置秘钥</h2><p>第二步之后就能正常使用了，不过需要输入密码，配置秘钥之后就可以无需密码建立隧道，并且，如果要通过systemd守护进程开机自启的话，也需要配置好秘钥才行  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>执行此命令之后，默认会在<code>~/.ssh/</code>目录下生成公钥和私钥，然后通过如下指令，将公钥复制到服务器上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-copy-id ubuntu@enter.B.ip.address</span><br></pre></td></tr></table></figure>
<p>然后就能不用密码建立隧道了</p>
<h2 id="四、设置开机自启"><a href="#四、设置开机自启" class="headerlink" title="四、设置开机自启"></a>四、设置开机自启</h2><p>创建一个<code>ssh-port-forward.service</code>文件，输入以下内容，并移动到<code>/lib/systemd/system/</code>下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=SSH port forward for to jump server&#x27;s port 8822. 8822 is already mapped to public network. As a result, we can use this command to SSH login to this server: ssh -NfR 8822:localhost:22 ubuntu@enter.B.ip.address</span><br><span class="line">After=sshd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=jia</span><br><span class="line">Group=jia</span><br><span class="line">ExecStart=/usr/bin/ssh -NR 8822:localhost:22 ubuntu@enter.B.ip.address</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=ssh-port-forward.service</span><br></pre></td></tr></table></figure>
<p>记得把里面的ip地址修改成服务器的ip，<code>[Service]</code>当中的<code>User</code>和<code>Group</code>修改成校园网主机的用户名</p>
<h2 id="五、通过scp传输文件"><a href="#五、通过scp传输文件" class="headerlink" title="五、通过scp传输文件"></a>五、通过scp传输文件</h2><p>以传输文件<code>music.mp3</code>为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -P 8822 ./music.mp3 jia@enter.B.ip.address</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
</search>
